import unittest

from mock import Mock, MagicMock

from cloudshell.workflow.training.models.config import TrainingWorkflowConfig
from cloudshell.workflow.training.setup_orchestrator import TrainingSetupWorkflow


class TestTrainingSetupWorkflow(unittest.TestCase):

    def test_register(self):
        # arrange
        config = Mock(spec=TrainingWorkflowConfig())
<<<<<<< HEAD
        sandbox = Mock()
        setup = TrainingSetupWorkflow(sandbox, config)
        setup.preparation_logic.prepare_environment = Mock()
=======
        setup = TrainingSetupWorkflow(config)
        sandbox = Mock(global_inputs = MagicMock())
>>>>>>> origin/master

        # act
        setup.prepare_environment()
        setup.register(sandbox)

        # assert
        setup.preparation_logic.prepare_environment.assert_called_once()
        sandbox.workflow.add_to_provisioning.assert_called_once_with(
            setup.default_setup_workflow.default_provisioning, None)
        sandbox.workflow.add_to_connectivity.assert_called_once_with(
            setup.default_setup_workflow.default_connectivity, None)
        sandbox.workflow.add_to_configuration.assert_called_once_with(
            setup.default_setup_workflow.default_configuration, None)
        sandbox.workflow.on_configuration_ended.assert_called_once_with(
            setup.user_sandbox_logic.create_user_sandboxes, None)
