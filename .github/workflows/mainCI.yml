# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # install python
    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.0
    # Runs a single command using the runners shell
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r package/requirements.txt
        pip install -r package/test_requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        pushd package
        python setup.py develop
        popd
        python -m unittest
    #- name: Generate coverage report
    #  run: |
    #    pip install coverage
    ##   pip install coveralls-lcov
    #    coveralls --output=coverage.json
    #    coveralls-lcov -v -n coverage.info > coverage.json
    #    pytest --cov=test/ --cov-report=xml
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          pip install pytest
          pip install pytest-cov
          pip install coveralls
          pytest --cov=test/
      - name: Run coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALL_TOKEN }}
        run: |
          python -m coveralls
  covdeclimate:
    name: Code Analisys
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '12'
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - uses: paambaati/codeclimate-action@v2.2.4
        env:
          CC_TEST_REPORTER_ID: 945dfb58a832d233a3caeb84e3e6d3be212e8c7abcb48117fce63b9adcb43647
        with:
          coverageCommand: yarn coverage